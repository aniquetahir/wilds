INFO - 08/04/21 01:18:00 - 0:00:00 - ============ Initialized logger ============
INFO - 08/04/21 01:18:00 - 0:00:00 - arch: resnet50
                                     base_lr: 0.15
                                     batch_size: 128
                                     checkpoint_freq: 25
                                     crops_for_assign: [0, 1]
                                     dataset: domainnet
                                     dataset_kwargs: {'domains': 'real,sketch'}
                                     dist_url: tcp://jagupard29:40003
                                     dump_checkpoints: examples/algorithms/swav/checkpoints/domainnet-real-sketch/checkpoints
                                     dump_path: examples/algorithms/swav/checkpoints/domainnet-real-sketch
                                     epoch_queue_starts: 500
                                     epochs: 400
                                     epsilon: 0.03
                                     feat_dim: 128
                                     final_lr: 0.00015
                                     freeze_prototypes_niters: 5005
                                     gpu_to_work_on: 0
                                     hidden_mlp: 2048
                                     is_not_slurm_job: False
                                     is_slurm_job: True
                                     local_rank: 0
                                     max_scale_crops: [1.0, 0.14]
                                     min_scale_crops: [0.14, 0.05]
                                     nmb_crops: [2, 6]
                                     nmb_prototypes: 3000
                                     queue_length: 3840
                                     rank: 0
                                     root_dir: /u/scr/nlp/dro
                                     seed: 31
                                     sinkhorn_iterations: 3
                                     size_crops: [224, 96]
                                     start_warmup: 0
                                     sync_bn: pytorch
                                     syncbn_process_group_size: 8
                                     temperature: 0.1
                                     use_fp16: True
                                     warmup_epochs: 0
                                     wd: 1e-06
                                     workers: 4
                                     world_size: 1
INFO - 08/04/21 01:18:00 - 0:00:00 - The experiment will be stored in examples/algorithms/swav/checkpoints/domainnet-real-sketch
                                     

DEBUG - 08/04/21 01:18:00 - 0:00:00 - Starting new HTTPS connection (1): pypi.python.org:443
DEBUG - 08/04/21 01:18:00 - 0:00:00 - Starting new HTTPS connection (1): pypi.python.org:443
DEBUG - 08/04/21 01:18:00 - 0:00:00 - https://pypi.python.org:443 "GET /pypi/outdated/json HTTP/1.1" 301 122
DEBUG - 08/04/21 01:18:00 - 0:00:00 - https://pypi.python.org:443 "GET /pypi/wilds/json HTTP/1.1" 301 122
DEBUG - 08/04/21 01:18:00 - 0:00:00 - Starting new HTTPS connection (1): pypi.org:443
DEBUG - 08/04/21 01:18:00 - 0:00:00 - Starting new HTTPS connection (1): pypi.org:443
DEBUG - 08/04/21 01:18:00 - 0:00:00 - https://pypi.org:443 "GET /pypi/outdated/json HTTP/1.1" 200 3264
DEBUG - 08/04/21 01:18:00 - 0:00:00 - https://pypi.org:443 "GET /pypi/wilds/json HTTP/1.1" 200 7119
WARNING - 08/04/21 01:18:00 - 0:00:00 - The WILDS package is out of date. Your version is 1.1.0, while the latest version is 1.2.1.
INFO - 08/04/21 01:18:40 - 0:00:00 - ============ Initialized logger ============
INFO - 08/04/21 01:18:40 - 0:00:00 - arch: resnet50
                                     base_lr: 0.15
                                     batch_size: 128
                                     checkpoint_freq: 25
                                     crops_for_assign: [0, 1]
                                     dataset: domainnet
                                     dataset_kwargs: {'domains': 'real,sketch'}
                                     dist_url: tcp://jagupard29:40003
                                     dump_checkpoints: examples/algorithms/swav/checkpoints/domainnet-real-sketch/checkpoints
                                     dump_path: examples/algorithms/swav/checkpoints/domainnet-real-sketch
                                     epoch_queue_starts: 500
                                     epochs: 400
                                     epsilon: 0.03
                                     feat_dim: 128
                                     final_lr: 0.00015
                                     freeze_prototypes_niters: 5005
                                     gpu_to_work_on: 0
                                     hidden_mlp: 2048
                                     is_not_slurm_job: False
                                     is_slurm_job: True
                                     local_rank: 0
                                     max_scale_crops: [1.0, 0.14]
                                     min_scale_crops: [0.14, 0.05]
                                     nmb_crops: [2, 6]
                                     nmb_prototypes: 3000
                                     queue_length: 3840
                                     rank: 0
                                     root_dir: /u/scr/nlp/dro
                                     seed: 31
                                     sinkhorn_iterations: 3
                                     size_crops: [224, 96]
                                     start_warmup: 0
                                     sync_bn: pytorch
                                     syncbn_process_group_size: 8
                                     temperature: 0.1
                                     use_fp16: True
                                     warmup_epochs: 0
                                     wd: 1e-06
                                     workers: 4
                                     world_size: 1
INFO - 08/04/21 01:18:40 - 0:00:00 - The experiment will be stored in examples/algorithms/swav/checkpoints/domainnet-real-sketch
                                     

DEBUG - 08/04/21 01:18:41 - 0:00:00 - Starting new HTTPS connection (1): pypi.python.org:443
DEBUG - 08/04/21 01:18:41 - 0:00:00 - Starting new HTTPS connection (1): pypi.python.org:443
DEBUG - 08/04/21 01:18:41 - 0:00:00 - https://pypi.python.org:443 "GET /pypi/wilds/json HTTP/1.1" 301 122
DEBUG - 08/04/21 01:18:41 - 0:00:00 - https://pypi.python.org:443 "GET /pypi/outdated/json HTTP/1.1" 301 122
DEBUG - 08/04/21 01:18:41 - 0:00:00 - Starting new HTTPS connection (1): pypi.org:443
DEBUG - 08/04/21 01:18:41 - 0:00:00 - Starting new HTTPS connection (1): pypi.org:443
DEBUG - 08/04/21 01:18:41 - 0:00:00 - https://pypi.org:443 "GET /pypi/wilds/json HTTP/1.1" 200 7119
DEBUG - 08/04/21 01:18:41 - 0:00:00 - https://pypi.org:443 "GET /pypi/outdated/json HTTP/1.1" 200 3264
WARNING - 08/04/21 01:18:41 - 0:00:00 - The WILDS package is out of date. Your version is 1.1.0, while the latest version is 1.2.1.
INFO - 08/04/21 01:22:51 - 0:00:00 - ============ Initialized logger ============
INFO - 08/04/21 01:22:51 - 0:00:00 - arch: resnet50
                                     base_lr: 0.15
                                     batch_size: 128
                                     checkpoint_freq: 25
                                     crops_for_assign: [0, 1]
                                     dataset: domainnet
                                     dataset_kwargs: {'domains': 'real,sketch'}
                                     dist_url: tcp://jagupard29:40003
                                     dump_checkpoints: examples/algorithms/swav/checkpoints/domainnet-real-sketch/checkpoints
                                     dump_path: examples/algorithms/swav/checkpoints/domainnet-real-sketch
                                     epoch_queue_starts: 500
                                     epochs: 400
                                     epsilon: 0.03
                                     feat_dim: 128
                                     final_lr: 0.00015
                                     freeze_prototypes_niters: 5005
                                     gpu_to_work_on: 0
                                     hidden_mlp: 2048
                                     is_not_slurm_job: False
                                     is_slurm_job: True
                                     local_rank: 0
                                     max_scale_crops: [1.0, 0.14]
                                     min_scale_crops: [0.14, 0.05]
                                     nmb_crops: [2, 6]
                                     nmb_prototypes: 3000
                                     queue_length: 3840
                                     rank: 0
                                     root_dir: /u/scr/nlp/dro
                                     seed: 31
                                     sinkhorn_iterations: 3
                                     size_crops: [224, 96]
                                     start_warmup: 0
                                     sync_bn: pytorch
                                     syncbn_process_group_size: 8
                                     temperature: 0.1
                                     use_fp16: True
                                     warmup_epochs: 0
                                     wd: 1e-06
                                     workers: 4
                                     world_size: 1
INFO - 08/04/21 01:22:51 - 0:00:00 - The experiment will be stored in examples/algorithms/swav/checkpoints/domainnet-real-sketch
                                     

DEBUG - 08/04/21 01:22:51 - 0:00:00 - Starting new HTTPS connection (1): pypi.python.org:443
DEBUG - 08/04/21 01:22:51 - 0:00:00 - Starting new HTTPS connection (1): pypi.python.org:443
DEBUG - 08/04/21 01:22:51 - 0:00:00 - https://pypi.python.org:443 "GET /pypi/outdated/json HTTP/1.1" 301 122
DEBUG - 08/04/21 01:22:51 - 0:00:00 - https://pypi.python.org:443 "GET /pypi/wilds/json HTTP/1.1" 301 122
DEBUG - 08/04/21 01:22:51 - 0:00:00 - Starting new HTTPS connection (1): pypi.org:443
DEBUG - 08/04/21 01:22:51 - 0:00:00 - Starting new HTTPS connection (1): pypi.org:443
DEBUG - 08/04/21 01:22:51 - 0:00:00 - https://pypi.org:443 "GET /pypi/outdated/json HTTP/1.1" 200 3264
DEBUG - 08/04/21 01:22:51 - 0:00:00 - https://pypi.org:443 "GET /pypi/wilds/json HTTP/1.1" 200 7119
WARNING - 08/04/21 01:22:51 - 0:00:00 - The WILDS package is out of date. Your version is 1.1.0, while the latest version is 1.2.1.
INFO - 08/04/21 01:23:41 - 0:00:00 - ============ Initialized logger ============
INFO - 08/04/21 01:23:41 - 0:00:00 - arch: resnet50
                                     base_lr: 0.15
                                     batch_size: 128
                                     checkpoint_freq: 25
                                     crops_for_assign: [0, 1]
                                     dataset: domainnet
                                     dataset_kwargs: {'domains': 'real,sketch'}
                                     dist_url: tcp://jagupard29:40003
                                     dump_checkpoints: examples/algorithms/swav/checkpoints/domainnet-real-sketch/checkpoints
                                     dump_path: examples/algorithms/swav/checkpoints/domainnet-real-sketch
                                     epoch_queue_starts: 500
                                     epochs: 400
                                     epsilon: 0.03
                                     feat_dim: 128
                                     final_lr: 0.00015
                                     freeze_prototypes_niters: 5005
                                     gpu_to_work_on: 0
                                     hidden_mlp: 2048
                                     is_not_slurm_job: False
                                     is_slurm_job: True
                                     local_rank: 0
                                     max_scale_crops: [1.0, 0.14]
                                     min_scale_crops: [0.14, 0.05]
                                     nmb_crops: [2, 6]
                                     nmb_prototypes: 3000
                                     queue_length: 3840
                                     rank: 0
                                     root_dir: /u/scr/nlp/dro
                                     seed: 31
                                     sinkhorn_iterations: 3
                                     size_crops: [224, 96]
                                     start_warmup: 0
                                     sync_bn: pytorch
                                     syncbn_process_group_size: 8
                                     temperature: 0.1
                                     use_fp16: True
                                     warmup_epochs: 0
                                     wd: 1e-06
                                     workers: 4
                                     world_size: 1
INFO - 08/04/21 01:23:41 - 0:00:00 - The experiment will be stored in examples/algorithms/swav/checkpoints/domainnet-real-sketch
                                     

DEBUG - 08/04/21 01:23:41 - 0:00:00 - Starting new HTTPS connection (1): pypi.python.org:443
DEBUG - 08/04/21 01:23:41 - 0:00:00 - Starting new HTTPS connection (1): pypi.python.org:443
DEBUG - 08/04/21 01:23:41 - 0:00:00 - https://pypi.python.org:443 "GET /pypi/wilds/json HTTP/1.1" 301 122
DEBUG - 08/04/21 01:23:41 - 0:00:00 - Starting new HTTPS connection (1): pypi.org:443
DEBUG - 08/04/21 01:23:41 - 0:00:00 - https://pypi.python.org:443 "GET /pypi/outdated/json HTTP/1.1" 301 122
DEBUG - 08/04/21 01:23:41 - 0:00:00 - Starting new HTTPS connection (1): pypi.org:443
DEBUG - 08/04/21 01:23:41 - 0:00:00 - https://pypi.org:443 "GET /pypi/wilds/json HTTP/1.1" 200 7119
WARNING - 08/04/21 01:23:41 - 0:00:00 - The WILDS package is out of date. Your version is 1.1.0, while the latest version is 1.2.1.
DEBUG - 08/04/21 01:23:41 - 0:00:00 - https://pypi.org:443 "GET /pypi/outdated/json HTTP/1.1" 200 3264
INFO - 08/04/21 01:23:53 - 0:00:12 - Building data done with 169118 images loaded.
INFO - 08/04/21 01:24:20 - 0:00:40 - ResNet(
                                       (padding): ConstantPad2d(padding=(1, 1, 1, 1), value=0.0)
                                       (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(2, 2), bias=False)
                                       (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                       (relu): ReLU(inplace=True)
                                       (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
                                       (layer1): Sequential(
                                         (0): Bottleneck(
                                           (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                           (downsample): Sequential(
                                             (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                             (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           )
                                         )
                                         (1): Bottleneck(
                                           (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                         )
                                         (2): Bottleneck(
                                           (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                         )
                                       )
                                       (layer2): Sequential(
                                         (0): Bottleneck(
                                           (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                           (downsample): Sequential(
                                             (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
                                             (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           )
                                         )
                                         (1): Bottleneck(
                                           (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                         )
                                         (2): Bottleneck(
                                           (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                         )
                                         (3): Bottleneck(
                                           (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                         )
                                       )
                                       (layer3): Sequential(
                                         (0): Bottleneck(
                                           (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                           (downsample): Sequential(
                                             (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
                                             (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           )
                                         )
                                         (1): Bottleneck(
                                           (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                         )
                                         (2): Bottleneck(
                                           (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                         )
                                         (3): Bottleneck(
                                           (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                         )
                                         (4): Bottleneck(
                                           (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                         )
                                         (5): Bottleneck(
                                           (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                         )
                                       )
                                       (layer4): Sequential(
                                         (0): Bottleneck(
                                           (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                           (downsample): Sequential(
                                             (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
                                             (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           )
                                         )
                                         (1): Bottleneck(
                                           (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                         )
                                         (2): Bottleneck(
                                           (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                                           (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                                           (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                           (relu): ReLU(inplace=True)
                                         )
                                       )
                                       (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
                                       (projection_head): Sequential(
                                         (0): Linear(in_features=2048, out_features=2048, bias=True)
                                         (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                                         (2): ReLU(inplace=True)
                                         (3): Linear(in_features=2048, out_features=128, bias=True)
                                       )
                                       (prototypes): Linear(in_features=128, out_features=3000, bias=False)
                                     )
INFO - 08/04/21 01:24:20 - 0:00:40 - Building model done.
INFO - 08/04/21 01:24:23 - 0:00:42 - Building optimizer done.
INFO - 08/04/21 01:24:23 - 0:00:42 - Initializing mixed precision done.
INFO - 08/04/21 01:24:23 - 0:00:42 - ============ Starting epoch 0 ... ============
